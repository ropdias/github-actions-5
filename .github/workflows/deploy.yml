name: Deployment
on:
  push:
    branches:
      - main
      - dev
    paths-ignore:
      - '**/README.md'
# defining env variables here make them available for all jobs, unless one job overwrite it
# by defining a variable of the same name
env:
  MONGODB_DB_NAME: gha-demo
jobs:
  test:
    # Here we are defining env variables only for this job
    env:
      MONGODB_CLUSTER_ADDRESS: cluster0.efcdi7r.mongodb.net
      MONGODB_USERNAME: github-actions-test
      MONGODB_PASSWORD: HAgHkxI2sPebLLN6
      PORT: 8080
    environment: testing
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-deps-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT # Here we are using a env variable dynamically for linux
      - name: Run tests
        run: npm test
      - name: Output information
        run: | # Here we are using the env object (another way to access the env variable)
          echo "MONGODB_USERNAME: ${{ env.MONGODB_USERNAME }}"
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: | # Here this env variable will not be available
          echo "MONGODB_USERNAME: ${{ env.MONGODB_USERNAME }}"
          echo "MONGODB_DB_NAME: ${{ env.MONGODB_DB_NAME }}"
